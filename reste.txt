#Integration einer React Rollenvergabe
        welcome_channel = Bot.get_channel(self, welcome_channel_id)
        await welcome_channel.send("Willkommen auf sem Turnierserver des <Cupname folgt> wenn du als Teilnehmer des Turnieres hier bist reagiere bitte mit 🏵")

    async def on_reaction_add(self, reaction, member):
        Turnierteilnehmer = discord.utils.get(member.guild.roles, name = 'Turnierteilnehmer')
        if str(reaction.emoji) == "🏵":
            await member.add_roles(Turnierteilnehmer)



@Whisper.event
async def on_raw_reaction_add(payload):
    message_id = payload.message_id
    if message_id == 798873790875435019:
        guild_id = payload.guild_id
        guild = discord.utils.find(lambda g: g.id == guild_id, Whisper.guilds)

        role = discord.utils.get(guild.roles, name=payload.emoji.name)

        if role is not None:
            member = discord.utils.find(lambda m: m.id == payload.user_id, guild.members)
            if member is not None:
                await member.add_role(role)
                print("Done")
            else:
                print("Person nicht gefunden.")
        else:
            print("Rolle nicht gefunden")


@event(coro=Whisper.on_ready(self))
async def on_raw_reaction_remove(payload):
    message_id = payload.message_id
    if message_id == 798873790875435019:
        guild_id = payload.guild_id
        guild = discord.utils.find(lambda g: g.id == guild_id, Whisper.guilds)

        role = discord.utils.get(guild.roles, name=payload.emoji.name)

        if role is not None:
            member = discord.utils.find(lambda m: m.id == payload.user_id, guild.members)
            if member is not None:
                await member.remove_role(role)
                print("Done")
            else:
                print("Person nicht gefunden.")
        else:
            print("Rolle nicht gefunden")




